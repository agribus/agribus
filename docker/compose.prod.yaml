services:
  postgres:
    container_name: cold-potato
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - agribus-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 3

  influxdb:
    container_name: hot-potato
    image: influxdb:3-core
    restart: unless-stopped
    environment:
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
    command:
      - influxdb3
      - serve
      - --node-id=${INFLUXDB_NODE_ID}
      - --object-store=file
      - --data-dir=/var/lib/influxdb3
    ports:
      - "8181:8181"
    volumes:
      - influxdb_data:/var/lib/influxdb3
    healthcheck:
      test: [ "CMD-SHELL", "curl -f -H 'Authorization: Bearer ${INFLUXDB_TOKEN}' http://localhost:8181/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - agribus-network
    depends_on:
      postgres:
        condition: service_healthy

  lychee:
    container_name: lychee_client
    build:
      context: ../
      dockerfile: docker/Dockerfile.lychee
      target: production
    expose:
      - "80"
    networks:
      - agribus-network
    environment:
      - NODE_ENV=production
    depends_on:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.lychee.rule=Host(`${DOMAIN_PROD}`)"
      - "traefik.http.routers.lychee.entrypoints=websecure"
      - "traefik.http.routers.lychee.tls.certresolver=tmhttpchallenge"
      - "traefik.http.services.lychee.loadbalancer.server.port=80"

  proxy:
    container_name: proxy
    image: traefik:v2.7
    restart: always
    command:
      - "--global.sendAnonymousUsage=false"
      - "--providers.docker"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.tmhttpchallenge.acme.httpchallenge=true"
      - "--certificatesresolvers.tmhttpchallenge.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.tmhttpchallenge.acme.email=${LETSENCRYPT_EMAIL}"
      - "--certificatesresolvers.tmhttpchallenge.acme.storage=/etc/acme/acme.json"
    ports:
      - "80:80"
      - "443:443"
    networks:
      - agribus-network
    volumes:
      - ./acme/:/etc/acme/
      - /var/run/docker.sock:/var/run/docker.sock:ro

volumes:
  postgres_data:
    name: agribus-cold-potato-data
  influxdb_data:
    name: agribus-hot-potato-data

networks:
  agribus-network:
    name: agribus-network
    driver: bridge
