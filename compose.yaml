services:
  postgres:
    container_name: cold-potato
    image: postgres:17
    restart: unless-stopped
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - agribus-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -U $$POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 3

  influxdb:
    container_name: hot-potato
    image: influxdb:3-core
    restart: unless-stopped
    environment:
      - INFLUXDB_USER=${INFLUXDB_USER}
      - INFLUXDB_PASSWORD=${INFLUXDB_PASSWORD}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
    command:
      - influxdb3
      - serve
      - --node-id=${INFLUXDB_NODE_ID}
      - --object-store=file
      - --data-dir=/var/lib/influxdb3
    ports:
      - "8181:8181"
    volumes:
      - influxdb_data:/var/lib/influxdb3
    healthcheck:
      test: [ "CMD-SHELL", "curl -f -H 'Authorization: Bearer ${INFLUXDB_TOKEN}' http://localhost:8181/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - agribus-network
    depends_on:
      postgres:
        condition: service_healthy
        
  tomato:
    container_name: tomato-backend
    build:
      context: ./apps/tomato_backend
      dockerfile: Dockerfile.dev
      args:
        BUILD_CONFIGURATION: ${BUILD_CONFIGURATION:-Release}
    ports:
      - "5001:5001"
      - "5005:5005"
    environment:
      - INFLUXDB__TOKEN=${INFLUXDB_TOKEN}
      - DEBUG_MODE=false
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5001
      - DOTNET_RUNNING_IN_CONTAINER=true
    restart: unless-stopped
    volumes:
      - ./apps/tomato_backend:/app
    depends_on:
      - postgres
    networks:
      - agribus-network

  influxdb3-explorer:
    image: quay.io/influxdb/influxdb3-explorer:latest
    container_name: hot-potato-explorer
    ports:
      - "8888:80"
      - "8889:8888"
    command: [ "--mode=admin" ]
    restart: unless-stopped
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - agribus-network

  lychee:
    container_name: lychee-client
    build:
      context: .
      dockerfile: docker/Dockerfile.lychee
      target: development
    volumes:
      - ./apps/lychee_client:/app/apps/lychee_client
      - /app/apps/lychee_client/node_modules
    ports:
      - "4200:4200"
    networks:
      - agribus-network

volumes:
  postgres_data:
    name: agribus-cold-potato-data
  influxdb_data:
    name: agribus-hot-potato-data
  agribus-api:
    name: agribus-tomato-data

networks:
  agribus-network:
    name: agribus-network
    driver: bridge
