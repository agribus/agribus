name: Build & Deploy Preprod

on:
  push:
    branches:
      - preprod
  workflow_dispatch:


jobs:
  build-and-push:
    name: Build Frontend Docker Image
    runs-on: ubuntu-latest
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set short SHA
        id: vars
        run: echo "short_sha=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image with dual tag
        run: |
          docker build \
            -t agribus/lychee:preprod \
            -t agribus/lychee:preprod-${{ steps.vars.outputs.short_sha }} \
            -f ./docker/Dockerfile.lychee .

      - name: Push Docker images
        run: |
          docker push agribus/lychee:preprod
          docker push agribus/lychee:preprod-${{ steps.vars.outputs.short_sha }}

  deploy:
    name: Deploy docker-compose.preprod.yaml
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: SSH Deploy (Pull & Restart Compose)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo "==> Pull latest Docker images"
            cd /srv/docker/agribus
            
            git fetch origin preprod
            git checkout preprod

            docker compose -f ./docker/compose.preprod.yaml pull

            echo "==> Restarting Preprod stack"
            docker compose -f ./docker/compose.preprod.yaml down
            docker compose -f ./docker/compose.preprod.yaml --env-file .env up -d --remove-orphans 

            echo "âœ… Preprod updated with image: preprod-${{ needs.build-and-push.outputs.short_sha }}"
