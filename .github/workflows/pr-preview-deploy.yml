name: PR Lychee Preview Deploy

on:
  pull_request:
    branches:
      - preprod

jobs:
  docker-build-and-push:
    environment: preprod
    runs-on: ubuntu-latest
    outputs:
      pr_number: ${{ steps.vars.outputs.PR_NUMBER }}

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4

      - name: Set PR variables
        id: vars
        run: echo "PR_NUMBER=${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: |
          docker build -t lychee-pr-${{ steps.vars.outputs.PR_NUMBER }} -f ./docker/Dockerfile.lychee .

      - name: Push Docker image to registry
        run: |
          docker tag lychee-pr-${{ steps.vars.outputs.PR_NUMBER }} agribus/lychee:pr-${{ steps.vars.outputs.PR_NUMBER }}
          docker push agribus/lychee:pr-${{ steps.vars.outputs.PR_NUMBER }}

  ssh-deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest
    environment: preprod

    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            PR=${{ needs.docker-build.outputs.pr_number }}
            
            docker pull agribus/lychee:pr-$PR
            
            docker run -d \
            --name lychee-pr-$PR \
            --network proxy \
            --label traefik.enable=true \
            --label "traefik.http.routers.pr-$PR.rule=Host(\"pr-$PR.agribus.fr\")" \
            --label traefik.http.routers.pr-$PR.entrypoints=websecure \
            --label traefik.http.routers.pr-$PR.tls.certresolver=tmhttpchallenge \
            --label traefik.http.services.pr-$PR.loadbalancer.server.port=80 \
            agribus/lychee:pr-$PR


      - name: Post preview URL as comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = ${{ needs.docker-build.outputs.pr_number }};
            const url = `https://pr-${prNumber}.agribus.fr`;
            const body = `ðŸš€ Preview deployed: : [${url}](${url})`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: body
            });
